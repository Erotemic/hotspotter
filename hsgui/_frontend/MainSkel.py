# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/home/joncrall/code/hotspotter/hsgui/_frontend/MainSkel.ui'
#
# Created: Mon Feb 10 13:40:41 2014
#      by: PyQt4 UI code generator 4.9.1
#
# WARNING! All changes made in this file will be lost!

if 0:
    from PyQt4 import QtCore, QtGui
    QtWidgets = QtGui
    UnicodeUTF8 = UnicodeUTF8
else:
    from matplotlib.backends import backend_qt5 as backend_qt
    from PyQt5 import QtCore
    from PyQt5 import QtGui
    from PyQt5.QtCore import *
    from PyQt5.QtGui import *
    from PyQt5.QtWidgets import *
    from PyQt5 import QtWidgets
    UnicodeUTF8 = -1


try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    _fromUtf8 = lambda s: s

class Ui_mainSkel(object):
    def setupUi(self, mainSkel):
        mainSkel.setObjectName(_fromUtf8("mainSkel"))
        mainSkel.resize(1013, 672)
        mainSkel.setUnifiedTitleAndToolBarOnMac(False)
        self.centralwidget = QtWidgets.QWidget(mainSkel)
        self.centralwidget.setObjectName(_fromUtf8("centralwidget"))
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName(_fromUtf8("verticalLayout"))
        self.splitter = QtWidgets.QSplitter(self.centralwidget)
        self.splitter.setOrientation(QtCore.Qt.Vertical)
        self.splitter.setObjectName(_fromUtf8("splitter"))
        self.tablesTabWidget = QtWidgets.QTabWidget(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(10)
        sizePolicy.setHeightForWidth(self.tablesTabWidget.sizePolicy().hasHeightForWidth())
        self.tablesTabWidget.setSizePolicy(sizePolicy)
        self.tablesTabWidget.setMinimumSize(QtCore.QSize(0, 0))
        self.tablesTabWidget.setObjectName(_fromUtf8("tablesTabWidget"))
        self.image_view = QtWidgets.QWidget()
        self.image_view.setMinimumSize(QtCore.QSize(445, 0))
        self.image_view.setObjectName(_fromUtf8("image_view"))
        self.gridLayout_3 = QtWidgets.QGridLayout(self.image_view)
        self.gridLayout_3.setObjectName(_fromUtf8("gridLayout_3"))
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName(_fromUtf8("verticalLayout_2"))
        self.gxs_TBL = QtWidgets.QTableWidget(self.image_view)
        self.gxs_TBL.setDragEnabled(False)
        self.gxs_TBL.setObjectName(_fromUtf8("gxs_TBL"))
        self.gxs_TBL.setColumnCount(0)
        self.gxs_TBL.setRowCount(0)
        self.verticalLayout_2.addWidget(self.gxs_TBL)
        self.gridLayout_3.addLayout(self.verticalLayout_2, 0, 0, 1, 1)
        self.tablesTabWidget.addTab(self.image_view, _fromUtf8(""))
        self.chip_view = QtWidgets.QWidget()
        self.chip_view.setObjectName(_fromUtf8("chip_view"))
        self.gridLayout_4 = QtWidgets.QGridLayout(self.chip_view)
        self.gridLayout_4.setObjectName(_fromUtf8("gridLayout_4"))
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName(_fromUtf8("verticalLayout_3"))
        self.cxs_TBL = QtWidgets.QTableWidget(self.chip_view)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cxs_TBL.sizePolicy().hasHeightForWidth())
        self.cxs_TBL.setSizePolicy(sizePolicy)
        self.cxs_TBL.setObjectName(_fromUtf8("cxs_TBL"))
        self.cxs_TBL.setColumnCount(0)
        self.cxs_TBL.setRowCount(0)
        self.verticalLayout_3.addWidget(self.cxs_TBL)
        self.gridLayout_4.addLayout(self.verticalLayout_3, 0, 0, 1, 1)
        self.tablesTabWidget.addTab(self.chip_view, _fromUtf8(""))
        self.name_view = QtWidgets.QWidget()
        self.name_view.setObjectName(_fromUtf8("name_view"))
        self.gridLayout = QtWidgets.QGridLayout(self.name_view)
        self.gridLayout.setObjectName(_fromUtf8("gridLayout"))
        self.nxs_TBL = QtWidgets.QTableWidget(self.name_view)
        self.nxs_TBL.setObjectName(_fromUtf8("nxs_TBL"))
        self.nxs_TBL.setColumnCount(0)
        self.nxs_TBL.setRowCount(0)
        self.gridLayout.addWidget(self.nxs_TBL, 0, 0, 1, 1)
        self.tablesTabWidget.addTab(self.name_view, _fromUtf8(""))
        self.result_view = QtWidgets.QWidget()
        self.result_view.setObjectName(_fromUtf8("result_view"))
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.result_view)
        self.verticalLayout_5.setObjectName(_fromUtf8("verticalLayout_5"))
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName(_fromUtf8("verticalLayout_4"))
        self.res_TBL = QtWidgets.QTableWidget(self.result_view)
        self.res_TBL.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.res_TBL.setTextElideMode(QtCore.Qt.ElideLeft)
        self.res_TBL.setObjectName(_fromUtf8("res_TBL"))
        self.res_TBL.setColumnCount(0)
        self.res_TBL.setRowCount(0)
        self.verticalLayout_4.addWidget(self.res_TBL)
        self.verticalLayout_5.addLayout(self.verticalLayout_4)
        self.tablesTabWidget.addTab(self.result_view, _fromUtf8(""))
        self.outputEdit = QtWidgets.QTextEdit(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.outputEdit.sizePolicy().hasHeightForWidth())
        self.outputEdit.setSizePolicy(sizePolicy)
        self.outputEdit.setAcceptRichText(False)
        self.outputEdit.setObjectName(_fromUtf8("outputEdit"))
        self.progressBar = QtWidgets.QProgressBar(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.progressBar.sizePolicy().hasHeightForWidth())
        self.progressBar.setSizePolicy(sizePolicy)
        self.progressBar.setProperty("value", 24)
        self.progressBar.setObjectName(_fromUtf8("progressBar"))
        self.verticalLayout.addWidget(self.splitter)
        mainSkel.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(mainSkel)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1013, 23))
        self.menubar.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.menubar.setDefaultUp(False)
        self.menubar.setNativeMenuBar(False)
        self.menubar.setObjectName(_fromUtf8("menubar"))
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName(_fromUtf8("menuFile"))
        self.menuOptions = QtWidgets.QMenu(self.menubar)
        self.menuOptions.setObjectName(_fromUtf8("menuOptions"))
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName(_fromUtf8("menuHelp"))
        self.menuActions = QtWidgets.QMenu(self.menubar)
        self.menuActions.setObjectName(_fromUtf8("menuActions"))
        self.menuBatch = QtWidgets.QMenu(self.menubar)
        self.menuBatch.setObjectName(_fromUtf8("menuBatch"))
        mainSkel.setMenuBar(self.menubar)
        self.actionOpen_Database = QtWidgets.QAction(mainSkel)
        self.actionOpen_Database.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionOpen_Database.setObjectName(_fromUtf8("actionOpen_Database"))
        self.actionSave_Database = QtWidgets.QAction(mainSkel)
        self.actionSave_Database.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionSave_Database.setObjectName(_fromUtf8("actionSave_Database"))
        self.actionImport_Img_file = QtWidgets.QAction(mainSkel)
        self.actionImport_Img_file.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionImport_Img_file.setObjectName(_fromUtf8("actionImport_Img_file"))
        self.actionOpen_Data_Directory = QtWidgets.QAction(mainSkel)
        self.actionOpen_Data_Directory.setObjectName(_fromUtf8("actionOpen_Data_Directory"))
        self.actionOpen_Source_Directory = QtWidgets.QAction(mainSkel)
        self.actionOpen_Source_Directory.setObjectName(_fromUtf8("actionOpen_Source_Directory"))
        self.actionUndockDisplay = QtWidgets.QAction(mainSkel)
        self.actionUndockDisplay.setObjectName(_fromUtf8("actionUndockDisplay"))
        self.actionTogPlt = QtWidgets.QAction(mainSkel)
        self.actionTogPlt.setObjectName(_fromUtf8("actionTogPlt"))
        self.actionHelpCMD = QtWidgets.QAction(mainSkel)
        self.actionHelpCMD.setObjectName(_fromUtf8("actionHelpCMD"))
        self.actionHelpGUI = QtWidgets.QAction(mainSkel)
        self.actionHelpGUI.setObjectName(_fromUtf8("actionHelpGUI"))
        self.actionAbout = QtWidgets.QAction(mainSkel)
        self.actionAbout.setEnabled(False)
        self.actionAbout.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionAbout.setObjectName(_fromUtf8("actionAbout"))
        self.actionHelpWorkflow = QtWidgets.QAction(mainSkel)
        self.actionHelpWorkflow.setObjectName(_fromUtf8("actionHelpWorkflow"))
        self.actionAdd_Chip = QtWidgets.QAction(mainSkel)
        self.actionAdd_Chip.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionAdd_Chip.setObjectName(_fromUtf8("actionAdd_Chip"))
        self.actionReselect_ROI = QtWidgets.QAction(mainSkel)
        self.actionReselect_ROI.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionReselect_ROI.setObjectName(_fromUtf8("actionReselect_ROI"))
        self.actionNext = QtWidgets.QAction(mainSkel)
        self.actionNext.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionNext.setObjectName(_fromUtf8("actionNext"))
        self.actionDelete_Chip = QtWidgets.QAction(mainSkel)
        self.actionDelete_Chip.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionDelete_Chip.setObjectName(_fromUtf8("actionDelete_Chip"))
        self.actionQuery = QtWidgets.QAction(mainSkel)
        self.actionQuery.setEnabled(True)
        self.actionQuery.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionQuery.setObjectName(_fromUtf8("actionQuery"))
        self.actionPrev = QtWidgets.QAction(mainSkel)
        self.actionPrev.setObjectName(_fromUtf8("actionPrev"))
        self.actionWriteLogs = QtWidgets.QAction(mainSkel)
        self.actionWriteLogs.setEnabled(False)
        self.actionWriteLogs.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionWriteLogs.setObjectName(_fromUtf8("actionWriteLogs"))
        self.actionOpen_Internal_Directory = QtWidgets.QAction(mainSkel)
        self.actionOpen_Internal_Directory.setObjectName(_fromUtf8("actionOpen_Internal_Directory"))
        self.actionPreferences = QtWidgets.QAction(mainSkel)
        self.actionPreferences.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionPreferences.setObjectName(_fromUtf8("actionPreferences"))
        self.actionQuit = QtWidgets.QAction(mainSkel)
        self.actionQuit.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionQuit.setObjectName(_fromUtf8("actionQuit"))
        self.actionConvertImage2Chip = QtWidgets.QAction(mainSkel)
        self.actionConvertImage2Chip.setEnabled(True)
        self.actionConvertImage2Chip.setObjectName(_fromUtf8("actionConvertImage2Chip"))
        self.actionBatch_Change_Name = QtWidgets.QAction(mainSkel)
        self.actionBatch_Change_Name.setObjectName(_fromUtf8("actionBatch_Change_Name"))
        self.actionReselect_Ori = QtWidgets.QAction(mainSkel)
        self.actionReselect_Ori.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionReselect_Ori.setObjectName(_fromUtf8("actionReselect_Ori"))
        self.actionAdd_Metadata_Property = QtWidgets.QAction(mainSkel)
        self.actionAdd_Metadata_Property.setObjectName(_fromUtf8("actionAdd_Metadata_Property"))
        self.actionAutoassign = QtWidgets.QAction(mainSkel)
        self.actionAutoassign.setObjectName(_fromUtf8("actionAutoassign"))
        self.actionRankErrorExpt = QtWidgets.QAction(mainSkel)
        self.actionRankErrorExpt.setObjectName(_fromUtf8("actionRankErrorExpt"))
        self.actionName_Consistency_Experiment = QtWidgets.QAction(mainSkel)
        self.actionName_Consistency_Experiment.setObjectName(_fromUtf8("actionName_Consistency_Experiment"))
        self.actionIncrease_ROI_Size = QtWidgets.QAction(mainSkel)
        self.actionIncrease_ROI_Size.setObjectName(_fromUtf8("actionIncrease_ROI_Size"))
        self.actionView_Docs = QtWidgets.QAction(mainSkel)
        self.actionView_Docs.setEnabled(False)
        self.actionView_Docs.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionView_Docs.setObjectName(_fromUtf8("actionView_Docs"))
        self.actionAutoassign_2 = QtWidgets.QAction(mainSkel)
        self.actionAutoassign_2.setObjectName(_fromUtf8("actionAutoassign_2"))
        self.actionNew_Database = QtWidgets.QAction(mainSkel)
        self.actionNew_Database.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionNew_Database.setObjectName(_fromUtf8("actionNew_Database"))
        self.actionImport_Img_dir = QtWidgets.QAction(mainSkel)
        self.actionImport_Img_dir.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionImport_Img_dir.setObjectName(_fromUtf8("actionImport_Img_dir"))
        self.actionPrecompute_Queries = QtWidgets.QAction(mainSkel)
        self.actionPrecompute_Queries.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionPrecompute_Queries.setObjectName(_fromUtf8("actionPrecompute_Queries"))
        self.actionPrecomputeChipsFeatures = QtWidgets.QAction(mainSkel)
        self.actionPrecomputeChipsFeatures.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionPrecomputeChipsFeatures.setObjectName(_fromUtf8("actionPrecomputeChipsFeatures"))
        self.actionView_DBDir = QtWidgets.QAction(mainSkel)
        self.actionView_DBDir.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionView_DBDir.setObjectName(_fromUtf8("actionView_DBDir"))
        self.actionScale_all_ROIS = QtWidgets.QAction(mainSkel)
        self.actionScale_all_ROIS.setEnabled(False)
        self.actionScale_all_ROIS.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionScale_all_ROIS.setObjectName(_fromUtf8("actionScale_all_ROIS"))
        self.actionConvert_all_images_into_chips = QtWidgets.QAction(mainSkel)
        self.actionConvert_all_images_into_chips.setEnabled(False)
        self.actionConvert_all_images_into_chips.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionConvert_all_images_into_chips.setObjectName(_fromUtf8("actionConvert_all_images_into_chips"))
        self.actionNew_Chip_Property = QtWidgets.QAction(mainSkel)
        self.actionNew_Chip_Property.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionNew_Chip_Property.setObjectName(_fromUtf8("actionNew_Chip_Property"))
        self.actionDelete_computed_directory = QtWidgets.QAction(mainSkel)
        self.actionDelete_computed_directory.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionDelete_computed_directory.setObjectName(_fromUtf8("actionDelete_computed_directory"))
        self.actionDelete_global_preferences = QtWidgets.QAction(mainSkel)
        self.actionDelete_global_preferences.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionDelete_global_preferences.setObjectName(_fromUtf8("actionDelete_global_preferences"))
        self.actionView_Computed_Dir = QtWidgets.QAction(mainSkel)
        self.actionView_Computed_Dir.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionView_Computed_Dir.setObjectName(_fromUtf8("actionView_Computed_Dir"))
        self.actionView_Global_Dir = QtWidgets.QAction(mainSkel)
        self.actionView_Global_Dir.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionView_Global_Dir.setObjectName(_fromUtf8("actionView_Global_Dir"))
        self.actionLayout_Figures = QtWidgets.QAction(mainSkel)
        self.actionLayout_Figures.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionLayout_Figures.setObjectName(_fromUtf8("actionLayout_Figures"))
        self.actionDev_Mode_IPython = QtWidgets.QAction(mainSkel)
        self.actionDev_Mode_IPython.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionDev_Mode_IPython.setObjectName(_fromUtf8("actionDev_Mode_IPython"))
        self.actionDelete_Precomputed_Results = QtWidgets.QAction(mainSkel)
        self.actionDelete_Precomputed_Results.setObjectName(_fromUtf8("actionDelete_Precomputed_Results"))
        self.actionDeveloper_Reload = QtWidgets.QAction(mainSkel)
        self.actionDeveloper_Reload.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionDeveloper_Reload.setObjectName(_fromUtf8("actionDeveloper_Reload"))
        self.actionDelete_Image = QtWidgets.QAction(mainSkel)
        self.actionDelete_Image.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionDelete_Image.setObjectName(_fromUtf8("actionDelete_Image"))
        self.menuFile.addAction(self.actionNew_Database)
        self.menuFile.addAction(self.actionOpen_Database)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave_Database)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionImport_Img_file)
        self.menuFile.addAction(self.actionImport_Img_dir)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menuOptions.addAction(self.actionLayout_Figures)
        self.menuOptions.addSeparator()
        self.menuOptions.addAction(self.actionPreferences)
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addAction(self.actionView_Docs)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionView_DBDir)
        self.menuHelp.addAction(self.actionView_Computed_Dir)
        self.menuHelp.addAction(self.actionView_Global_Dir)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionWriteLogs)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionDelete_Precomputed_Results)
        self.menuHelp.addAction(self.actionDelete_computed_directory)
        self.menuHelp.addAction(self.actionDelete_global_preferences)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionDev_Mode_IPython)
        self.menuHelp.addAction(self.actionDeveloper_Reload)
        self.menuActions.addAction(self.actionAdd_Chip)
        self.menuActions.addAction(self.actionNew_Chip_Property)
        self.menuActions.addSeparator()
        self.menuActions.addAction(self.actionQuery)
        self.menuActions.addSeparator()
        self.menuActions.addAction(self.actionReselect_ROI)
        self.menuActions.addAction(self.actionReselect_Ori)
        self.menuActions.addSeparator()
        self.menuActions.addAction(self.actionNext)
        self.menuActions.addSeparator()
        self.menuActions.addAction(self.actionDelete_Chip)
        self.menuActions.addAction(self.actionDelete_Image)
        self.menuBatch.addAction(self.actionPrecomputeChipsFeatures)
        self.menuBatch.addAction(self.actionPrecompute_Queries)
        self.menuBatch.addSeparator()
        self.menuBatch.addAction(self.actionScale_all_ROIS)
        self.menuBatch.addSeparator()
        self.menuBatch.addAction(self.actionConvert_all_images_into_chips)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuActions.menuAction())
        self.menubar.addAction(self.menuBatch.menuAction())
        self.menubar.addAction(self.menuOptions.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(mainSkel)
        self.tablesTabWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(mainSkel)

    def retranslateUi(self, mainSkel):
        mainSkel.setWindowTitle(QtWidgets.QApplication.translate("mainSkel", "HotSpotter", None, UnicodeUTF8))
        self.gxs_TBL.setSortingEnabled(True)
        self.tablesTabWidget.setTabText(self.tablesTabWidget.indexOf(self.image_view), QtWidgets.QApplication.translate("mainSkel", "Image Table", None, UnicodeUTF8))
        self.cxs_TBL.setSortingEnabled(True)
        self.tablesTabWidget.setTabText(self.tablesTabWidget.indexOf(self.chip_view), QtWidgets.QApplication.translate("mainSkel", "Chip Table", None, UnicodeUTF8))
        self.tablesTabWidget.setTabText(self.tablesTabWidget.indexOf(self.name_view), QtWidgets.QApplication.translate("mainSkel", "Name Table", None, UnicodeUTF8))
        self.res_TBL.setSortingEnabled(True)
        self.tablesTabWidget.setTabText(self.tablesTabWidget.indexOf(self.result_view), QtWidgets.QApplication.translate("mainSkel", "Query Results Table", None, UnicodeUTF8))
        self.menuFile.setTitle(QtWidgets.QApplication.translate("mainSkel", "File", None, UnicodeUTF8))
        self.menuOptions.setTitle(QtWidgets.QApplication.translate("mainSkel", "Options", None, UnicodeUTF8))
        self.menuHelp.setTitle(QtWidgets.QApplication.translate("mainSkel", "Help", None, UnicodeUTF8))
        self.menuActions.setTitle(QtWidgets.QApplication.translate("mainSkel", "Actions", None, UnicodeUTF8))
        self.menuBatch.setTitle(QtWidgets.QApplication.translate("mainSkel", "Batch", None, UnicodeUTF8))
        self.actionOpen_Database.setText(QtWidgets.QApplication.translate("mainSkel", "Open Database", None, UnicodeUTF8))
        self.actionOpen_Database.setToolTip(QtWidgets.QApplication.translate("mainSkel", "Opens a different database directory. ", None, UnicodeUTF8))
        self.actionOpen_Database.setShortcut(QtWidgets.QApplication.translate("mainSkel", "Ctrl+O", None, UnicodeUTF8))
        self.actionSave_Database.setText(QtWidgets.QApplication.translate("mainSkel", "Save Database", None, UnicodeUTF8))
        self.actionSave_Database.setIconText(QtWidgets.QApplication.translate("mainSkel", "Save Database", None, UnicodeUTF8))
        self.actionSave_Database.setToolTip(QtWidgets.QApplication.translate("mainSkel", "Saves the added images / chip properties / and changed names to the database csv tables.", None, UnicodeUTF8))
        self.actionSave_Database.setShortcut(QtWidgets.QApplication.translate("mainSkel", "Ctrl+S", None, UnicodeUTF8))
        self.actionImport_Img_file.setText(QtWidgets.QApplication.translate("mainSkel", "Import Images (select file(s))", None, UnicodeUTF8))
        self.actionImport_Img_file.setShortcut(QtWidgets.QApplication.translate("mainSkel", "Ctrl+I", None, UnicodeUTF8))
        self.actionOpen_Data_Directory.setText(QtWidgets.QApplication.translate("mainSkel", "View Data Directory", None, UnicodeUTF8))
        self.actionOpen_Source_Directory.setText(QtWidgets.QApplication.translate("mainSkel", "View Source Directory", None, UnicodeUTF8))
        self.actionUndockDisplay.setText(QtWidgets.QApplication.translate("mainSkel", "Undock Display", None, UnicodeUTF8))
        self.actionTogPlt.setText(QtWidgets.QApplication.translate("mainSkel", "Toggle PlotWidget", None, UnicodeUTF8))
        self.actionHelpCMD.setText(QtWidgets.QApplication.translate("mainSkel", "Command Line Help", None, UnicodeUTF8))
        self.actionHelpGUI.setText(QtWidgets.QApplication.translate("mainSkel", "GUI Help", None, UnicodeUTF8))
        self.actionAbout.setText(QtWidgets.QApplication.translate("mainSkel", "About", None, UnicodeUTF8))
        self.actionHelpWorkflow.setText(QtWidgets.QApplication.translate("mainSkel", "Workflow Help", None, UnicodeUTF8))
        self.actionAdd_Chip.setText(QtWidgets.QApplication.translate("mainSkel", "Add Chip", None, UnicodeUTF8))
        self.actionAdd_Chip.setToolTip(QtWidgets.QApplication.translate("mainSkel", "When adding a chip, you select an ROI in Image View. The ROI defines a new chip and it is added (but not saved) to the database.", None, UnicodeUTF8))
        self.actionAdd_Chip.setShortcut(QtWidgets.QApplication.translate("mainSkel", "A", None, UnicodeUTF8))
        self.actionReselect_ROI.setText(QtWidgets.QApplication.translate("mainSkel", "Reselect ROI", None, UnicodeUTF8))
        self.actionReselect_ROI.setToolTip(QtWidgets.QApplication.translate("mainSkel", "Changes the ROI of a chip. Previously associated results and chip data are removed and recomputed. ", None, UnicodeUTF8))
        self.actionReselect_ROI.setShortcut(QtWidgets.QApplication.translate("mainSkel", "R", None, UnicodeUTF8))
        self.actionNext.setText(QtWidgets.QApplication.translate("mainSkel", "Select Next", None, UnicodeUTF8))
        self.actionNext.setToolTip(QtWidgets.QApplication.translate("mainSkel", "Selects the next image or chip in the database. ", None, UnicodeUTF8))
        self.actionNext.setShortcut(QtWidgets.QApplication.translate("mainSkel", "N", None, UnicodeUTF8))
        self.actionDelete_Chip.setText(QtWidgets.QApplication.translate("mainSkel", "Delete Chip", None, UnicodeUTF8))
        self.actionDelete_Chip.setToolTip(QtWidgets.QApplication.translate("mainSkel", "Removes a chip from the database. ", None, UnicodeUTF8))
        self.actionDelete_Chip.setShortcut(QtWidgets.QApplication.translate("mainSkel", "Ctrl+Del", None, UnicodeUTF8))
        self.actionQuery.setText(QtWidgets.QApplication.translate("mainSkel", "Query", None, UnicodeUTF8))
        self.actionQuery.setToolTip(QtWidgets.QApplication.translate("mainSkel", "Issues the currently selected chip as a query. The result table is then populated.", None, UnicodeUTF8))
        self.actionQuery.setShortcut(QtWidgets.QApplication.translate("mainSkel", "Q", None, UnicodeUTF8))
        self.actionPrev.setText(QtWidgets.QApplication.translate("mainSkel", "Prev", None, UnicodeUTF8))
        self.actionWriteLogs.setText(QtWidgets.QApplication.translate("mainSkel", "Write Logs", None, UnicodeUTF8))
        self.actionOpen_Internal_Directory.setText(QtWidgets.QApplication.translate("mainSkel", "View Internal Directory", None, UnicodeUTF8))
        self.actionPreferences.setText(QtWidgets.QApplication.translate("mainSkel", "Edit Preferences", None, UnicodeUTF8))
        self.actionPreferences.setToolTip(QtWidgets.QApplication.translate("mainSkel", "Changes algorithm parameters and program behavior.", None, UnicodeUTF8))
        self.actionPreferences.setShortcut(QtWidgets.QApplication.translate("mainSkel", "Ctrl+P", None, UnicodeUTF8))
        self.actionQuit.setText(QtWidgets.QApplication.translate("mainSkel", "Quit", None, UnicodeUTF8))
        self.actionQuit.setToolTip(QtWidgets.QApplication.translate("mainSkel", "Exits the program", None, UnicodeUTF8))
        self.actionConvertImage2Chip.setText(QtWidgets.QApplication.translate("mainSkel", "Convert All Images to Chips", None, UnicodeUTF8))
        self.actionBatch_Change_Name.setText(QtWidgets.QApplication.translate("mainSkel", "Batch Change Name", None, UnicodeUTF8))
        self.actionReselect_Ori.setText(QtWidgets.QApplication.translate("mainSkel", "Reselect Orientation", None, UnicodeUTF8))
        self.actionReselect_Ori.setToolTip(QtWidgets.QApplication.translate("mainSkel", "Changes the orientation of a chip. Previously associated results and chip data are removed and recomputed. ", None, UnicodeUTF8))
        self.actionReselect_Ori.setShortcut(QtWidgets.QApplication.translate("mainSkel", "O", None, UnicodeUTF8))
        self.actionAdd_Metadata_Property.setText(QtWidgets.QApplication.translate("mainSkel", "Add Chip Property", None, UnicodeUTF8))
        self.actionAutoassign.setText(QtWidgets.QApplication.translate("mainSkel", "Assign Matches Above Threshold", None, UnicodeUTF8))
        self.actionRankErrorExpt.setText(QtWidgets.QApplication.translate("mainSkel", "Rank Error Experiment", None, UnicodeUTF8))
        self.actionName_Consistency_Experiment.setText(QtWidgets.QApplication.translate("mainSkel", "Name Consistency", None, UnicodeUTF8))
        self.actionIncrease_ROI_Size.setText(QtWidgets.QApplication.translate("mainSkel", "Increase all ROI Sizes", None, UnicodeUTF8))
        self.actionView_Docs.setText(QtWidgets.QApplication.translate("mainSkel", "View Documentation", None, UnicodeUTF8))
        self.actionAutoassign_2.setText(QtWidgets.QApplication.translate("mainSkel", "Auto-Assign Matches", None, UnicodeUTF8))
        self.actionNew_Database.setText(QtWidgets.QApplication.translate("mainSkel", "New Database", None, UnicodeUTF8))
        self.actionNew_Database.setToolTip(QtWidgets.QApplication.translate("mainSkel", "Create a new folder to use as a database. ", None, UnicodeUTF8))
        self.actionNew_Database.setShortcut(QtWidgets.QApplication.translate("mainSkel", "Ctrl+N", None, UnicodeUTF8))
        self.actionImport_Img_dir.setText(QtWidgets.QApplication.translate("mainSkel", "Import Images (select directory)", None, UnicodeUTF8))
        self.actionPrecompute_Queries.setText(QtWidgets.QApplication.translate("mainSkel", "Precompute Queries", None, UnicodeUTF8))
        self.actionPrecompute_Queries.setToolTip(QtWidgets.QApplication.translate("mainSkel", "This might take anywhere from a coffee break to an overnight  procedure depending on how many ROIs you\'ve made. It queries each chip and saves the result which allows multiple queries to be rapidly inspected later. ", None, UnicodeUTF8))
        self.actionPrecomputeChipsFeatures.setText(QtWidgets.QApplication.translate("mainSkel", "Precompute Chips/Features", None, UnicodeUTF8))
        self.actionPrecomputeChipsFeatures.setToolTip(QtWidgets.QApplication.translate("mainSkel", "Extracts all chips from images, and computes features. This loads the data into memory and reduces waiting time between selecting chips and images.", None, UnicodeUTF8))
        self.actionPrecomputeChipsFeatures.setShortcut(QtWidgets.QApplication.translate("mainSkel", "Ctrl+Return", None, UnicodeUTF8))
        self.actionView_DBDir.setText(QtWidgets.QApplication.translate("mainSkel", "View Database Dir", None, UnicodeUTF8))
        self.actionView_DBDir.setToolTip(QtWidgets.QApplication.translate("mainSkel", "Opens the database folder in your operating system\'s native file browser (explorer/finder/nautilus)", None, UnicodeUTF8))
        self.actionScale_all_ROIS.setText(QtWidgets.QApplication.translate("mainSkel", "Scale all ROIs", None, UnicodeUTF8))
        self.actionScale_all_ROIS.setToolTip(QtWidgets.QApplication.translate("mainSkel", "Changes the size of every ROI in the database. ", None, UnicodeUTF8))
        self.actionConvert_all_images_into_chips.setText(QtWidgets.QApplication.translate("mainSkel", "Convert all images into chips", None, UnicodeUTF8))
        self.actionConvert_all_images_into_chips.setToolTip(QtWidgets.QApplication.translate("mainSkel", "Every image without a chip has an ROI added to it spanning the entire image.", None, UnicodeUTF8))
        self.actionNew_Chip_Property.setText(QtWidgets.QApplication.translate("mainSkel", "New Chip Property", None, UnicodeUTF8))
        self.actionNew_Chip_Property.setToolTip(QtWidgets.QApplication.translate("mainSkel", "Creates a new column in the chip table for user properties.", None, UnicodeUTF8))
        self.actionDelete_computed_directory.setText(QtWidgets.QApplication.translate("mainSkel", "Delete Computed Directory", None, UnicodeUTF8))
        self.actionDelete_computed_directory.setToolTip(QtWidgets.QApplication.translate("mainSkel", "Deletes all precomputations (not your ROIs or properties though) and lets all data be recomputed and reloaded. This puts your database in a cleaner state. ", None, UnicodeUTF8))
        self.actionDelete_global_preferences.setText(QtWidgets.QApplication.translate("mainSkel", "Delete Global Preferences", None, UnicodeUTF8))
        self.actionDelete_global_preferences.setToolTip(QtWidgets.QApplication.translate("mainSkel", "This deletes global preferences like the previously opened database, your work directory, and defaults algorithm preferences. Use if HotSpotter crashes on loading a database. ", None, UnicodeUTF8))
        self.actionView_Computed_Dir.setText(QtWidgets.QApplication.translate("mainSkel", "View Computed Dir", None, UnicodeUTF8))
        self.actionView_Computed_Dir.setToolTip(QtWidgets.QApplication.translate("mainSkel", "Opens the directory where all precomputed chips, query results, and features are stored. ", None, UnicodeUTF8))
        self.actionView_Global_Dir.setText(QtWidgets.QApplication.translate("mainSkel", "View Global Dir", None, UnicodeUTF8))
        self.actionView_Global_Dir.setToolTip(QtWidgets.QApplication.translate("mainSkel", "This is youre ~/.hotspotter folder, which stores non-database-specific preferences.", None, UnicodeUTF8))
        self.actionLayout_Figures.setText(QtWidgets.QApplication.translate("mainSkel", "Layout Figures", None, UnicodeUTF8))
        self.actionLayout_Figures.setToolTip(QtWidgets.QApplication.translate("mainSkel", "Organizes windows in a grid", None, UnicodeUTF8))
        self.actionLayout_Figures.setShortcut(QtWidgets.QApplication.translate("mainSkel", "Ctrl+L", None, UnicodeUTF8))
        self.actionDev_Mode_IPython.setText(QtWidgets.QApplication.translate("mainSkel", "Developer Mode (IPython)", None, UnicodeUTF8))
        self.actionDev_Mode_IPython.setToolTip(QtWidgets.QApplication.translate("mainSkel", "This allows IPython interaction in the terminal and disables GUI interaction until the \"exit\" command is entered in IPython. ", None, UnicodeUTF8))
        self.actionDev_Mode_IPython.setShortcut(QtWidgets.QApplication.translate("mainSkel", "Ctrl+Alt+Shift+D", None, UnicodeUTF8))
        self.actionDelete_Precomputed_Results.setText(QtWidgets.QApplication.translate("mainSkel", "Delete Cached Query Results", None, UnicodeUTF8))
        self.actionDelete_Precomputed_Results.setToolTip(QtWidgets.QApplication.translate("mainSkel", "Removes all precomputed results. Use if you expect that your results may be corrupted.", None, UnicodeUTF8))
        self.actionDeveloper_Reload.setText(QtWidgets.QApplication.translate("mainSkel", "Developer Reload", None, UnicodeUTF8))
        self.actionDeveloper_Reload.setShortcut(QtWidgets.QApplication.translate("mainSkel", "Ctrl+Shift+R", None, UnicodeUTF8))
        self.actionDelete_Image.setText(QtWidgets.QApplication.translate("mainSkel", "Trash Image", None, UnicodeUTF8))
        self.actionDelete_Image.setShortcut(QtWidgets.QApplication.translate("mainSkel", "Ctrl+Shift+Del", None, UnicodeUTF8))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    mainSkel = QtWidgets.QMainWindow()
    ui = Ui_mainSkel()
    ui.setupUi(mainSkel)
    mainSkel.show()
    sys.exit(app.exec_())

